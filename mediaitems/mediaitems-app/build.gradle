apply plugin: 'java'
sourceCompatibility = jdk_version
targetCompatibility = jdk_version

apply plugin: 'war'

war {
	from ("../mediaitems-webclient/build"){into ("webclient")}
	baseName="mediaitems"
}

war.dependsOn(":mediaitems-webclient:build")

dependencies {
	compile project(':mediaitems-http')
	compile project(':mediaitems-metadata-mongorepository')

	testCompile ('junit:junit:4.8.2')
	compile "org.springframework:spring-webmvc:$spring_version"
	compile 'org.slf4j:slf4j-api:1.6.4'
	compile "org.springframework.integration:spring-integration-core:4.0.0.RELEASE"

	providedCompile 'javax:javaee-api:7.0'

	runtime 'org.slf4j:slf4j-log4j12:1.6.4'
	runtime 'log4j:log4j:1.2.14'
	runtime 'org.codehaus.jackson:jackson-core-asl:1.9.13'
	runtime 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
	runtime 'org.codehaus.jackson:jackson-xc:1.9.13'
	runtime 'org.codehaus.jackson:jackson-jaxrs:1.9.13'
	
	
}

//eclipse project setup
apply plugin:'eclipse-wtp'
eclipse {
	project {
		natures (		'org.springframework.ide.eclipse.core.springnature',
				'org.springsource.ide.eclipse.gradle.core.nature',
				'org.eclipse.jdt.core.javanature',
				'org.eclipse.wst.common.project.facet.core.nature',
				'org.eclipse.wst.common.modulecore.ModuleCoreNature',
				'org.eclipse.jem.workbench.JavaEMFNature')

		buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		buildCommand 'org.eclipse.wst.validation.validationbuilder'
	}
	classpath {
		plusConfigurations += configurations.providedCompile

		noExportConfigurations += configurations.providedCompile

		file {
			withXml { xml ->
				xml.asNode().classpathentry.findAll{ it.@kind == 'lib' }.each{
					it.appendNode('attributes').appendNode(
							'attribute',
							[
								name: it.@exported ? 'org.eclipse.jst.component.dependency' : 'org.eclipse.jst.component.nondependency',
								value: it.@exported ? '/WEB-INF/lib' : ''
							]
							)
				}
			}
		}
	}
}

//cargo deployment
repositories {
	mavenRepo urls:'http://repository.jboss.org/nexus/content/groups/public-jboss/'
}
apply plugin: 'cargo-base'
apply plugin: 'cargo'
buildscript {
	repositories {jcenter()}
	dependencies {classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5'}
}
dependencies{ 
def cargoVersion = '1.4.8'
cargo 'org.wildfly:wildfly-controller-client:8.0.0.Final',
	  "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
	  "org.codehaus.cargo:cargo-ant:$cargoVersion"
}
cargo {	
		containerId = 'wildfly8x'
	
		remote {
			hostname = 'localhost'
			username = 'admin'
			password = 'admin'
		}
}
cargoDeployRemote.dependsOn(war)
cargoRedeployRemote.dependsOn(war)
